# https://dev.azure.com/home-assistant

parameters:
  builderVersion: ''
  builderApk: ''
  wheelsRequirement: ''
  wheelsRequirementDiff: ''
  wheelsSingle: false
  wheelsLocal: false
  preBuild: []


jobs:
- job: 'Wheels'
  timeoutInMinutes: 360
  pool:
    vmImage: 'ubuntu-latest'
  variables:
  - group: wheels
  strategy:
    matrix:
      amd64:
        buildArch: 'amd64'
      i386:
        buildArch: 'i386'
      armhf:
        buildArch: 'armhf'
      armv7:
        buildArch: 'armv7'
      aarch64:
        buildArch: 'aarch64'
  steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends \
        qemu-user-static \
        binfmt-support \
        curl
      sudo mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
      sudo update-binfmts --enable qemu-arm
      sudo update-binfmts --enable qemu-aarch64
    displayName: 'Initial cross build'
  - script: |
      mkdir -p .ssh
      echo -e "-----BEGIN RSA PRIVATE KEY-----\n$(wheelsSSH)\n-----END RSA PRIVATE KEY-----" >> .ssh/id_rsa
      ssh-keyscan -H $(wheelsHost) >> .ssh/known_hosts
      chmod 600 .ssh/*
    displayName: 'Install ssh key'
  - script: |
      sudo docker pull homeassistant/$(buildArch)-wheels:${{ parameters.builderVersion }}
    displayName: 'Install wheels builder'
  - ${{ parameters.preBuild }}
  - script: |
      build_args=()

      if [ -f "${{ parameters.wheelsRequirement}}" ]; then
        build_args+=(--requirement "${{ parameters.wheelsRequirement}}")
      fi

      if [ -f "${{ parameters.wheelsRequirementDiff}}" ]; then
        build_args+=(--requirement-diff "${{ parameters.wheelsRequirementDiff}}")
      fi

      if [ "${{ parameters.wheelsSingle}}" == "true" ]; then
        build_args+=(--single)
      fi

      if [ "${{ parameters.wheelsLocal}}" == "true" ]; then
        build_args+=(--local)
      fi

      sudo docker run --rm -v $(pwd):/data:ro -v $(pwd)/.ssh:/root/.ssh:rw \
        homeassistant/$(buildArch)-wheels:${{ parameters.builderVersion }} \
        --apk "${{ parameters.builderApk }}" \
        --index $(wheelsIndex) \
        --upload rsync \
        --remote wheels@$(wheelsHost):/opt/wheels \
        "${build_args[@]}"
    displayName: 'Run wheels build'
